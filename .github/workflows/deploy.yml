name: Deploy Spring Application to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Make directory for deliver
        run: mkdir deploy

      - name: Write the application.yml
        run: |
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml

      ## springboot 도커 이미지 빌드 후 도커허브에 push하기
      - name: web springboot docker build and push
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build --no-cache -t soongu/event-api:latest .
          docker push soongu/event-api:latest

      # 도커 허브에서 jar파일 및 pull
      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        with:
          username: ec2-user
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Docker login..."
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            
            echo "Pulling Docker image..."
            docker pull soongu/event-api:latest
            
            echo "Stopping existing container..."
            docker-compose -f /home/ec2-user/docker-compose.yml down  # 기존 컨테이너 종료
            
            echo "Starting new container..."
            docker-compose -f /home/ec2-user/docker-compose.yml up -d # 새 컨테이너 시작
          

#            echo "Stopping existing container..."
#            docker stop event-api-container || true
#            docker rm event-api-container || true
#            echo "Starting new container..."
#            docker run -d -p 80:80 --name event-api-container soongu/event-api:latest
